import {
    Waves,
    Settings,
    Map,
    BarChart3,
    Activity,
    MessageCircle,
    Eye,
    CheckCircle,
    Globe,
    Navigation,
    Thermometer,
    Wind,
    Layers,
    Database,
    Download
  } from 'lucide-react';
  
  // Tutorial step categories
  export const TUTORIAL_CATEGORIES = {
    GETTING_STARTED: 'getting_started',
    BASIC_FEATURES: 'basic_features',
    ADVANCED_FEATURES: 'advanced_features',
    DATA_ANALYSIS: 'data_analysis'
  };
  
  // Tutorial step definitions
  export const TUTORIAL_STEPS = [
    {
      id: 'welcome',
      category: TUTORIAL_CATEGORIES.GETTING_STARTED,
      title: 'Welcome to CubeAI',
      subtitle: 'Your comprehensive platform for ocean data analysis',
      description: 'Interactive ocean data visualization and analysis platform.',
      content: `Welcome to the CubeAI - a powerful platform for exploring and analyzing ocean data in real-time.
  
  **What you'll learn:**
  ‚Ä¢ Navigate ocean data visualizations and controls
  ‚Ä¢ Interact with monitoring stations and environmental data
  ‚Ä¢ Use AI-powered analysis for oceanographic insights
  ‚Ä¢ Export and analyze time-series data
  ‚Ä¢ Explore advanced mapping and 3D visualization features
  
  **This tutorial takes approximately 5-7 minutes.**
  
  The platform integrates real-time oceanographic data, advanced modeling, and AI analysis to support marine research, maritime operations, and coastal management.`,
      icon: Waves,
      target: null,
      position: 'center',
      actions: ['next'],
      duration: 30,
      category_color: 'blue'
    },
  
    {
      id: 'control-panel',
      category: TUTORIAL_CATEGORIES.BASIC_FEATURES,
      title: 'Master the Control Panel',
      subtitle: 'Your command center for ocean data exploration',
      description: 'Learn to navigate data controls, animation, and parameter selection.',
      content: `The Control Panel is your primary interface for controlling the oceanographic visualization:
  
  **üéØ Study Area Selection**
  Choose geographic regions: MSP (Mississippi Sound), USM (University of Southern Mississippi), MBL (Marine Biology Laboratory)
  
  **üåä Ocean Model Selection**
  ‚Ä¢ NGOSF2: Northern Gulf of Mexico operational forecast
  ‚Ä¢ ROMS: Regional Ocean Modeling System
  ‚Ä¢ HYCOM: Hybrid Coordinate Ocean Model
  
  **üìä Parameter Controls**
  Monitor various oceanographic parameters:
  ‚Ä¢ Current Speed & Direction (m/s, degrees)
  ‚Ä¢ Surface Elevation & Direction (m, degrees)  
  ‚Ä¢ Temperature, Salinity, Pressure
  ‚Ä¢ Wind Speed & Direction
  
  **‚è∞ Temporal Navigation**
  ‚Ä¢ Date/Time selection for historical data
  ‚Ä¢ Animation playback controls (play/pause/speed)
  ‚Ä¢ Frame-by-frame navigation
  ‚Ä¢ Loop modes (repeat, once, bounce)
  
  **üìè Depth Selection**
  Choose measurement depths from surface (0ft) to deep water (200+ ft) to analyze vertical ocean structure.
  
  **Try changing the playback speed or selecting different parameters to see live updates.**`,
      icon: Settings,
      target: '[data-tutorial="control-panel"]',
      position: 'bottom',
      actions: ['prev', 'next'],
      highlight: true,
      duration: 45,
      tips: [
        'Use keyboard shortcuts: Space for play/pause, arrow keys for frame navigation',
        'Higher playback speeds help identify trends over longer time periods',
        'Different depths reveal stratified ocean structure'
      ]
    },
  
    {
      id: 'map-interaction',
      category: TUTORIAL_CATEGORIES.BASIC_FEATURES,
      title: 'Interactive Ocean Mapping',
      subtitle: 'Explore stations, currents, and environmental layers',
      description: 'Navigate the map, interact with monitoring stations, and customize layers.',
      content: `The interactive map provides comprehensive ocean visualization with multiple data layers and controls:
  
  **üó∫Ô∏è Map Controls & Styles**
  ‚Ä¢ Satellite, Dark, Outdoors, Streets view modes
  ‚Ä¢ Globe projection with auto-rotation option
  ‚Ä¢ Zoom and pan controls with touch/mouse support
  ‚Ä¢ Global view and station zoom buttons
  
  **üéØ Monitoring Stations**
  ‚Ä¢ Colored markers represent data collection stations
  ‚Ä¢ Click stations to view detailed information
  ‚Ä¢ Station colors indicate data density/quality
  ‚Ä¢ Real ocean monitoring locations vs simulated data
  
  **üå¨Ô∏è Wind Visualization**
  ‚Ä¢ **Live Wind Particles**: Real-time wind data visualization
  ‚Ä¢ **Wind Vectors**: Synthetic wind pattern display  
  ‚Ä¢ Adjustable particle count, speed, and fade settings
  ‚Ä¢ Color-coded wind speeds (light air to storm conditions)
  
  **üåä Oceanographic Layers**
  ‚Ä¢ **Bathymetry**: Ocean depth visualization (-11,000m to surface)
  ‚Ä¢ **Sea Surface Temperature**: MODIS satellite data overlay
  ‚Ä¢ **Ocean Current Vectors**: Real-time flow direction and speed
  ‚Ä¢ **Ocean Base Layer**: ArcGIS oceanographic reference map
  
  **üìç HoloOcean Integration**
  ‚Ä¢ Green POV marker shows 3D simulation viewpoint
  ‚Ä¢ Click anywhere to update simulation perspective
  ‚Ä¢ Coordinate system for underwater environment
  
  **üí° Pro Tips:**
  ‚Ä¢ Enable globe auto-rotation for global exploration
  ‚Ä¢ Combine multiple layers for comprehensive analysis
  ‚Ä¢ Use wind particles for real-time atmospheric conditions`,
      icon: Map,
      target: '[data-tutorial="map-container"]',
      position: 'right',
      actions: ['prev', 'next'],
      highlight: true,
      duration: 60,
      tips: [
        'Right-click and drag to rotate the 3D globe view',
        'Station validation shows whether locations are on water vs land',
        'Wind particle density affects performance - adjust for your device'
      ]
    },
  
    {
      id: 'data-panels',
      category: TUTORIAL_CATEGORIES.DATA_ANALYSIS,
      title: 'Environmental Data Analysis',
      subtitle: 'Real-time monitoring and trend analysis',
      description: 'Understand environmental readings, time-series charts, and data quality.',
      content: `The Data Panels provide comprehensive environmental monitoring and analysis tools:
  
  **üìä Environmental Data Dashboard**
  Real-time sensor readings with quality indicators:
  ‚Ä¢ **Temperature**: Water temperature in ¬∞F with depth correlation
  ‚Ä¢ **Salinity**: Practical Salinity Units (PSU) for water density
  ‚Ä¢ **Pressure**: Depth pressure in decibars (dbar)
  ‚Ä¢ **Sensor Depth**: Current measurement depth in feet
  
  **üìà Time Series Analysis**
  Interactive charts showing temporal trends:
  ‚Ä¢ **Current Speed Trends**: Flow velocity over time (m/s)
  ‚Ä¢ **Sound Speed Variations**: Acoustic velocity changes (m/s)
  ‚Ä¢ **Surface Elevation (SSH) Patterns**: Sea surface elevation (m)
  ‚Ä¢ **Temperature Fluctuations**: Thermal structure changes (¬∞F)
  
  **üéÆ HoloOcean 3D Visualization**
  Immersive underwater environment simulation:
  ‚Ä¢ Interactive depth profiling from surface to selected depth
  ‚Ä¢ Real-time parameter visualization in 3D space
  ‚Ä¢ WebRTC streaming for collaborative analysis
  ‚Ä¢ POV coordinate system for spatial navigation
  
  **‚öôÔ∏è Data Quality Assessment**
  ‚Ä¢ Real-time vs Historical data indicators
  ‚Ä¢ Connection status monitoring
  ‚Ä¢ Data freshness timestamps
  ‚Ä¢ Station validation and reliability metrics
  
  **üîß Customization Options**
  ‚Ä¢ Adjustable time ranges: 12h/24h/48h views
  ‚Ä¢ Parameter selection for focused analysis
  ‚Ä¢ Refresh data capability
  ‚Ä¢ Mobile-responsive charts and controls
  
  **Advanced Features:**
  ‚Ä¢ API integration for historical analysis
  ‚Ä¢ Multi-parameter correlation detection
  ‚Ä¢ Export capabilities for external analysis`,
      icon: BarChart3,
      target: '[data-tutorial="data-panels"]',
      position: 'left',
      actions: ['prev', 'next'],
      highlight: true,
      duration: 50,
      tips: [
        'Longer time ranges reveal seasonal patterns',
        'Temperature gradients indicate thermocline depth',
        'Sound speed affects sonar and acoustic equipment'
      ]
    },
  
    {
      id: 'output-module',
      category: TUTORIAL_CATEGORIES.DATA_ANALYSIS,
      title: 'Analysis Output & History',
      subtitle: 'Track insights and export analysis results',
      description: 'Manage AI analysis responses, export data, and review insights.',
      content: `The Output Module serves as your analysis command center and historical record:
  
  **üìù Response Management**
  ‚Ä¢ Complete history of AI analysis responses
  ‚Ä¢ Automatic categorization (charts, tables, text analysis)
  ‚Ä¢ Expandable/collapsible interface for space optimization
  ‚Ä¢ Context preservation for each analysis
  
  **üîç Filtering & Organization**
  Smart filtering options:
  ‚Ä¢ **All Responses**: Complete analysis history
  ‚Ä¢ **Charts & Trends**: Graphical analysis results
  ‚Ä¢ **Data & Tables**: Structured data presentations  
  ‚Ä¢ **Text Analysis**: Narrative insights and recommendations
  
  **üìä Interactive Content**
  Dynamic response enhancement:
  ‚Ä¢ Auto-generated charts based on analysis context
  ‚Ä¢ Environmental data tables with current conditions
  ‚Ä¢ Parameter-specific visualizations
  ‚Ä¢ Time-stamped analysis metadata
  
  **üíæ Export & Sharing**
  Professional data export capabilities:
  ‚Ä¢ JSON format for technical analysis
  ‚Ä¢ Copy responses to clipboard
  ‚Ä¢ Downloadable analysis reports
  ‚Ä¢ Shareable insights for collaboration
  
  **üîÑ Analysis Context Tracking**
  Each response includes complete context:
  ‚Ä¢ Current frame and temporal position
  ‚Ä¢ Selected parameters and depth settings
  ‚Ä¢ Environmental conditions at time of analysis
  ‚Ä¢ Data source and quality metrics
  
  **‚ö° Real-time Integration**
  ‚Ä¢ Responses appear simultaneously in chat and output module
  ‚Ä¢ Live updates during parameter changes
  ‚Ä¢ Automatic context awareness for relevant insights
  
  **Pro Features:**
  ‚Ä¢ Search through analysis history
  ‚Ä¢ Bookmark important insights
  ‚Ä¢ Export multiple responses as compiled report`,
      icon: Activity,
      target: '[data-tutorial="output-module"]',
      position: 'left',
      actions: ['prev', 'next'],
      highlight: true,
      duration: 40,
      tips: [
        'Use filters to quickly find specific types of analysis',
        'Export responses for inclusion in research reports',
        'Context metadata helps reproduce analysis conditions'
      ]
    },
  
    {
      id: 'chatbot',
      category: TUTORIAL_CATEGORIES.BASIC_FEATURES,
      title: 'CubeAI Assistant',
      subtitle: 'Intelligent oceanographic analysis and insights',
      description: 'Master AI-powered analysis with natural language queries.',
      content: `CubeAI is your expert oceanographic analyst, providing intelligent insights about marine conditions:
  
  **ü§ñ Natural Language Interface**
  Ask questions in plain English about:
  ‚Ä¢ Current oceanographic conditions
  ‚Ä¢ Weather and sea state analysis  
  ‚Ä¢ Safety assessments for maritime operations
  ‚Ä¢ Predictive forecasting and trend analysis
  ‚Ä¢ Equipment recommendations and operational guidance
  
  **üìä Context-Aware Analysis**
  CubeAI automatically considers:
  ‚Ä¢ Your current parameter selections (depth, location, time)
  ‚Ä¢ Real-time environmental data
  ‚Ä¢ Historical trends and patterns
  ‚Ä¢ Model outputs and confidence levels
  ‚Ä¢ Data source quality and reliability
  
  **üîç Specialized Capabilities**
  ‚Ä¢ **Marine Safety**: Risk assessments for vessel operations
  ‚Ä¢ **Environmental Analysis**: Temperature gradients, salinity fronts
  ‚Ä¢ **Operational Forecasting**: 6-12 hour condition predictions
  ‚Ä¢ **Research Support**: USM academic collaboration features
  ‚Ä¢ **Data Interpretation**: Complex oceanographic phenomenon explanation
  
  **üí¨ Quick Query Examples**
  Try these conversation starters:
  ‚Ä¢ *"What are the current conditions?"*
  ‚Ä¢ *"Analyze wave patterns for small boat safety"*
  ‚Ä¢ *"Predict conditions for the next 6 hours"*
  ‚Ä¢ *"How does temperature vary with depth?"*
  ‚Ä¢ *"Is it safe for diving operations?"*
  ‚Ä¢ *"Compare today's data to historical averages"*
  
  **üéØ Smart Suggestions**
  ‚Ä¢ Quick-access buttons for common queries
  ‚Ä¢ Context-sensitive question prompts
  ‚Ä¢ Follow-up question recommendations
  ‚Ä¢ Parameter adjustment suggestions
  
  **‚ö° Integration Features**
  ‚Ä¢ Responses automatically saved to Output Module
  ‚Ä¢ Real-time data incorporation
  ‚Ä¢ Cross-platform compatibility
  ‚Ä¢ Mobile-optimized interface`,
      icon: MessageCircle,
      target: '[data-tutorial="chatbot"]',
      position: 'left',
      actions: ['prev', 'next'],
      highlight: true,
      duration: 45,
      tips: [
        'Be specific about location and conditions for best results',
        'Ask follow-up questions to dive deeper into analysis',
        'CubeAI learns from your current settings and selections'
      ]
    },
  
    {
      id: 'advanced-features',
      category: TUTORIAL_CATEGORIES.ADVANCED_FEATURES,
      title: 'Advanced Platform Features',
      subtitle: 'Power user capabilities and hidden features',
      description: 'Unlock advanced analysis tools and professional workflows.',
      content: `Discover powerful features for advanced oceanographic analysis and research:
  
  **üéØ Station Deep Analysis**
  Professional monitoring station analysis:
  ‚Ä¢ Click any station ‚Üí "Analyze Station Data" for comprehensive reports
  ‚Ä¢ Multi-parameter correlation analysis
  ‚Ä¢ Data quality validation and reliability assessment
  ‚Ä¢ Historical trend analysis with statistical confidence
  ‚Ä¢ CSV export for external processing (research/reports)
  
  **üåç Global Ocean Exploration**
  Advanced mapping and visualization:
  ‚Ä¢ **Globe Mode**: Worldwide ocean exploration with projection switching
  ‚Ä¢ **Auto-rotation**: Continuous global scanning mode
  ‚Ä¢ **Multi-scale Analysis**: Seamless zoom from global to local scales
  ‚Ä¢ **Custom Projections**: Mercator, orthographic, stereographic views
  
  **üìä Data Management & Quality Control**
  Professional data handling:
  ‚Ä¢ **Real-time Quality Monitoring**: Connection status and data freshness
  ‚Ä¢ **Data Validation**: Ocean vs land position verification
  ‚Ä¢ **Performance Optimization**: Adaptive loading for large datasets
  
  **üîß Research & Collaboration Tools**
  Academic and professional features:
  ‚Ä¢ **USM Integration**: University of Southern Mississippi research support
  ‚Ä¢ **Export Capabilities**: NetCDF, MATLAB, CSV formats for analysis
  ‚Ä¢ **API Documentation**: Programmatic access for researchers
  ‚Ä¢ **Collaborative Analysis**: Shared sessions and viewpoints
  
  **üì± Mobile & Accessibility**
  Cross-platform optimization:
  ‚Ä¢ **Touch Controls**: Optimized for tablets and smartphones
  ‚Ä¢ **Responsive Design**: Adaptive layouts for any screen size
  ‚Ä¢ **Gesture Support**: Pinch-zoom, swipe navigation
  ‚Ä¢ **Offline Capability**: Cached data for field operations
  
  **‚öôÔ∏è Customization & Automation**
  Power user configuration:
  ‚Ä¢ **Custom Layer Combinations**: Save preferred visualization setups
  ‚Ä¢ **Automated Monitoring**: Set alerts for condition changes
  ‚Ä¢ **Batch Processing**: Analyze multiple time periods simultaneously
  ‚Ä¢ **Integration APIs**: Connect with external monitoring systems`,
      icon: Eye,
      target: null,
      position: 'center',
      actions: ['prev', 'next'],
      duration: 60,
      tips: [
        'Station validation ensures data quality in research applications',
        'Export data in academic formats for peer-reviewed publications',
        'Mobile optimization allows field data collection and analysis'
      ]
    },
  
    {
      id: 'completion',
      category: TUTORIAL_CATEGORIES.GETTING_STARTED,
      title: 'Tutorial Complete! üéâ',
      subtitle: 'You\'re ready for professional ocean data analysis',
      description: 'Summary of learned features and next steps for exploration.',
      content: `Congratulations! You've mastered the CubeAI platform.
  
  **üéì Skills Acquired:**
  ‚úÖ **Control Panel Navigation** - Parameter selection, temporal controls, animation
  ‚úÖ **Interactive Mapping** - Station analysis, layer management, global exploration
  ‚úÖ **Data Analysis** - Environmental monitoring, time-series interpretation, quality assessment
  ‚úÖ **AI-Powered Insights** - Natural language queries, predictive analysis, safety assessment
  ‚úÖ **Advanced Features** - Export capabilities, research tools, mobile optimization
  
  **üöÄ Next Steps for Exploration:**
  ‚Ä¢ **Explore Your Region**: Focus on local waters and monitoring stations
  ‚Ä¢ **Ask Complex Questions**: Use CubeAI for advanced oceanographic analysis
  ‚Ä¢ **Compare Time Periods**: Analyze seasonal patterns and long-term trends
  ‚Ä¢ **Export for Research**: Generate data for academic or operational use
  
  **üîß Professional Applications:**
  ‚Ä¢ **Marine Operations**: Safety assessments and route planning
  ‚Ä¢ **Research Projects**: Data analysis for scientific publications
  ‚Ä¢ **Environmental Monitoring**: Coastal and offshore condition tracking
  ‚Ä¢ **Education**: Interactive learning for marine science students
  ‚Ä¢ **Emergency Response**: Real-time conditions for maritime incidents
  
  **üìö Additional Resources:**
  ‚Ä¢ Access this tutorial anytime via Settings ‚Üí Tutorial
  ‚Ä¢ Check the Documentation section for API details
  ‚Ä¢ Contact USM Maritime Technology Solutions for research collaboration
  ‚Ä¢ Join the CubeAI community for updates and support
  
  **Ready to dive deep into ocean data analysis! üåä**
  
  *The ocean holds countless secrets - this platform helps you discover them.*`,
      icon: CheckCircle,
      target: null,
      position: 'center',
      actions: ['prev', 'complete', 'restart'],
      duration: 45,
      category_color: 'green'
    }
  ];
  
  // Step management utilities
  export class TutorialStepManager {
    constructor(steps = TUTORIAL_STEPS) {
      this.steps = steps;
      this.currentStep = 0;
      this.completedSteps = new Set();
      this.startTime = null;
      this.stepTimes = {};
    }
  
    // Navigation methods
    goToStep(stepIndex) {
      if (stepIndex >= 0 && stepIndex < this.steps.length) {
        this.markStepCompleted(this.currentStep);
        this.currentStep = stepIndex;
        return this.getCurrentStep();
      }
      return null;
    }
  
    nextStep() {
      return this.goToStep(this.currentStep + 1);
    }
  
    prevStep() {
      return this.goToStep(this.currentStep - 1);
    }
  
    // Step state management
    getCurrentStep() {
      return this.steps[this.currentStep];
    }
  
    markStepCompleted(stepIndex) {
      this.completedSteps.add(stepIndex);
      this.stepTimes[stepIndex] = Date.now();
    }
  
    isStepCompleted(stepIndex) {
      return this.completedSteps.has(stepIndex);
    }
  
    getProgress() {
      return {
        current: this.currentStep + 1,
        total: this.steps.length,
        percentage: Math.round(((this.currentStep + 1) / this.steps.length) * 100),
        completed: this.completedSteps.size
      };
    }
  
    // Filtering and search
    getStepsByCategory(category) {
      return this.steps.filter(step => step.category === category);
    }
  
    findStepById(id) {
      return this.steps.find(step => step.id === id);
    }
  
    getStepsWithTargets() {
      return this.steps.filter(step => step.target);
    }
  
    // Analytics and timing
    startTutorial() {
      this.startTime = Date.now();
      this.currentStep = 0;
      this.completedSteps.clear();
      this.stepTimes = {};
    }
  
    getTutorialDuration() {
      if (!this.startTime) return 0;
      return Date.now() - this.startTime;
    }
  
    getStepDuration(stepIndex) {
      return this.stepTimes[stepIndex] || 0;
    }
  
    // Validation and requirements
    canAdvanceToStep(stepIndex) {
      // Add custom logic for step prerequisites
      return stepIndex >= 0 && stepIndex < this.steps.length;
    }
  
    getRequiredActions(stepIndex) {
      const step = this.steps[stepIndex];
      return step?.actions || [];
    }
  
    // Export and import
    exportProgress() {
      return {
        currentStep: this.currentStep,
        completedSteps: Array.from(this.completedSteps),
        stepTimes: this.stepTimes,
        startTime: this.startTime,
        totalDuration: this.getTutorialDuration()
      };
    }
  
    importProgress(progressData) {
      this.currentStep = progressData.currentStep || 0;
      this.completedSteps = new Set(progressData.completedSteps || []);
      this.stepTimes = progressData.stepTimes || {};
      this.startTime = progressData.startTime || null;
    }
  }
  
  // Utility functions
  export const getTutorialStepById = (id) => {
    return TUTORIAL_STEPS.find(step => step.id === id);
  };
  
  export const getTutorialCategories = () => {
    return Object.values(TUTORIAL_CATEGORIES);
  };
  
  export const getStepsByCategory = (category) => {
    return TUTORIAL_STEPS.filter(step => step.category === category);
  };
  
  export const getTotalEstimatedTime = () => {
    return TUTORIAL_STEPS.reduce((total, step) => total + (step.duration || 30), 0);
  };
  
  export const getStepTargets = () => {
    return TUTORIAL_STEPS
      .filter(step => step.target)
      .map(step => ({
        id: step.id,
        target: step.target,
        highlight: step.highlight
      }));
  };
  
  export default {
    TUTORIAL_STEPS,
    TUTORIAL_CATEGORIES,
    TutorialStepManager,
    getTutorialStepById,
    getTutorialCategories,
    getStepsByCategory,
    getTotalEstimatedTime,
    getStepTargets
  };